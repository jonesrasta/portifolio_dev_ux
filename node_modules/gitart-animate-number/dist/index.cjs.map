{"version":3,"file":"index.cjs","sources":["../node_modules/.pnpm/bezier-easing@2.1.0/node_modules/bezier-easing/src/index.js","../src/lib/config.ts","../src/lib/animateUsingInterval.ts","../src/lib/animate.ts"],"sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n","import type { BezierParams } from './types'\n\nexport const easingTypes: Record<string, BezierParams> = {\n  ease: [0.25, 0.1, 0.25, 1],\n  linear: [0, 0, 1, 1],\n  easeIn: [0.42, 0, 1, 1],\n  easeOut: [0, 0, 0.58, 1],\n  easeInOut: [0.42, 0, 0.58, 1],\n  default: [0.5, 0, 0.5, 1],\n}\n\nexport const defaults = {\n  FPS: 60,\n  BEZIER: easingTypes.default,\n}\n","\nimport BezierEasing from 'bezier-easing'\n\n// types\nimport type { IAnimateByIntervalParams, StopAnimationFn } from './types'\n\nimport { defaults } from './config'\n\n/**\n * animate number using `setInterval`\n */\nexport const animateUsingInterval = ({\n  from,\n  to,\n  duration,\n  fps = defaults.FPS,\n  bezier = defaults.BEZIER,\n  on,\n  completed,\n  stopped,\n  done,\n}: IAnimateByIntervalParams): StopAnimationFn => {\n  const easingFn = BezierEasing(...bezier)\n  const difference = to - from\n\n  const frames = Math.round(duration / (1000 / fps))\n  let frame = 1\n  let currentValue = from\n\n  const intervalId = setInterval(() => {\n    let progress = frame / frames\n    if (progress > 1)\n      progress = 1\n\n    currentValue = from + (difference * easingFn(progress))\n    on(currentValue)\n\n    if (progress === 1) {\n      clearInterval(intervalId)\n      completed?.(currentValue)\n      done?.(currentValue)\n    }\n\n    frame++\n  }, duration / frames)\n\n  return () => {\n    clearInterval(intervalId)\n    stopped?.(currentValue)\n    done?.(currentValue)\n  }\n}\n","import BezierEasing from 'bezier-easing'\n\n// types\nimport type { IParams, StopAnimationFn } from './types'\n\nimport { defaults } from './config'\n\n/**\n * animate number using `requestAnimationFrame`\n */\nexport const animate = ({\n  from,\n  to,\n  duration,\n  bezier = defaults.BEZIER,\n  on,\n  completed,\n  stopped,\n  done,\n}: IParams): StopAnimationFn => {\n  const easingFn = BezierEasing(...bezier)\n  const difference = to - from\n\n  const timestamp = Date.now()\n  let rqfId = 0\n  let currentValue = from\n\n  const fn = () => {\n    let progress = (Date.now() - timestamp) / duration\n    if (progress > 1)\n      progress = 1\n\n    currentValue = from + (difference * easingFn(progress))\n    on(currentValue)\n\n    if (progress === 1) {\n      completed?.(currentValue)\n      done?.(currentValue)\n      return\n    }\n\n    rqfId = requestAnimationFrame(fn)\n  }\n\n  rqfId = requestAnimationFrame(fn)\n\n  return () => {\n    cancelAnimationFrame(rqfId)\n    stopped?.(currentValue)\n    done?.(currentValue)\n  }\n}\n"],"names":["BezierEasing"],"mappings":"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"}